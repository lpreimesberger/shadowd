name: Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install cosign
        uses: sigstore/cosign-installer@v3

      - name: Set version
        id: version
        run: echo "VERSION=1.0.${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Build binaries
        run: |
          mkdir -p dist

          # Linux x64
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X main.Version=${{ steps.version.outputs.VERSION }}" -o dist/shadowy-linux-amd64 .

          # Linux ARM64
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w -X main.Version=${{ steps.version.outputs.VERSION }}" -o dist/shadowy-linux-arm64 .

          # Linux ARM32
          GOOS=linux GOARCH=arm GOARM=7 go build -ldflags="-s -w -X main.Version=${{ steps.version.outputs.VERSION }}" -o dist/shadowy-linux-arm32 .

          # macOS x64
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -X main.Version=${{ steps.version.outputs.VERSION }}" -o dist/shadowy-darwin-amd64 .

          # macOS ARM64
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w -X main.Version=${{ steps.version.outputs.VERSION }}" -o dist/shadowy-darwin-arm64 .

          # Windows x64
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -X main.Version=${{ steps.version.outputs.VERSION }}" -o dist/shadowy-windows-amd64.exe .

      - name: Generate checksums
        run: |
          cd dist
          sha256sum * > checksums.txt
          cat checksums.txt

      - name: Sign binaries with cosign
        run: |
          for file in dist/shadowy-*; do
            if [ -f "$file" ]; then
              echo "Signing $file"
              cosign sign-blob --yes "$file" --output-signature "${file}.sig" --output-certificate "${file}.pem"
            fi
          done

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          name: Release v${{ steps.version.outputs.VERSION }}
          body: |
            Automated release v${{ steps.version.outputs.VERSION }}

            ## Binaries
            All binaries are signed with Sigstore cosign and logged to the public Rekor transparency log.

            ## Verification
            To verify a binary:
            ```bash
            cosign verify-blob \
              --certificate shadowy-linux-amd64.pem \
              --signature shadowy-linux-amd64.sig \
              --certificate-identity-regexp="https://github.com/${{ github.repository }}/*" \
              --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
              shadowy-linux-amd64
            ```

            ## Checksums
            See checksums.txt for SHA256 hashes of all binaries.
          files: |
            dist/*
          draft: false
          prerelease: false
